Try these books

1) Guide to Competitive Programming: Learning and Improving Algorithms Through Contests (Undergraduate Topics in Computer Science) 
2) Competitive Programming, 3rd Edition
3) Algorithmic Puzzles 1st Edition

Look into how this works
https://www.youtube.com/watch?v=sYlOjyPyX3g

Missed Questions: 
4[x], 
5, 29, 
31[x], 
40[x], 50, 53, 55, 56, 69, 71, 75, 81, 89, 96, 99
116, 163, 189, 190, 198,
336, 371, 394, 
402, 442, 489, 
560, 572, 
628, 647, 663, 680, 681
722, 750, 
862, 865, 
973, 988 (just because I didn't get the best solution)


Keep Coding: 
3,4,5, 10,23, 29, 30, 31, 32, 34 i don't understand why, 43 code one time, 44 dynamic, 47 one time, 48 for [][]
50, 68, 74, 76, 80, 81, 85 (stack with weird logic), 89, 94, 95, 96,
144


Recoded:
  2 -> Got done super fast
  3 -> Got it done. Messed up little on map[start]. Should have been map[s[start]]. S being the string.
  5 -> Coded without any issue
  8 -> Was pretty tired (no carbs) so made mistakes but the structure of algo was solid. Fixing the errors were easy.
 10 -> Made some erros with variables ect. This is due to not having intellisense ect. The logic of program was right.
 23 -> Again small bugs due to not having a compiler. Logic was solid. Got to pay more attention to detail and be perfect.
 42 -> Again small bugs, Like Math.Min instead of Math.Max. Solid logic. Ones idiotic bugs done, it was solid.
 48 ->
 49 ->
 73 ->
 78 ->
 89 ->
